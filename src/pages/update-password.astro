---
import Layout from "@/layouts/Layout.astro";
import { UpdatePasswordForm } from "@/components/auth/UpdatePasswordForm";

const title = "Zmiana hasła - 10xCards";

// Check for error or recovery parameters in the URL
const url = new URL(Astro.request.url);
const error = url.searchParams.get("error");
const errorCode = url.searchParams.get("error_code");
const errorDescription = url.searchParams.get("error_description");
const type = url.searchParams.get("type"); // Can be "recovery" for password reset

// Log URL parameters for debugging
console.log("[Update Password Page] URL params:", {
  error,
  errorCode,
  type,
  search: url.search,
});

// If there's an error from Supabase, show it
let authError: string | null = null;
if (error || errorCode) {
  if (errorCode === "otp_expired") {
    authError = "Link resetowania hasła wygasł. Poproś o nowy link resetowania hasła.";
  } else if (error === "access_denied") {
    authError = "Link resetowania hasła jest nieprawidłowy. Poproś o nowy link resetowania hasła.";
  } else {
    authError = errorDescription || "Wystąpił błąd podczas resetowania hasła. Poproś o nowy link.";
  }
}

// Note: We don't check for session on server-side because when coming from email link,
// the tokens are in the URL hash and need to be exchanged client-side first.
// The UpdatePasswordForm component will handle the actual password update,
// and the API endpoint will verify the session at that time.

export const prerender = false;
---

<Layout title={title}>
  <div class="min-h-[calc(100vh-80px)] flex items-center justify-center px-4 py-12">
    <div class="w-full max-w-md">
      <div class="text-center mb-8">
        <h1 class="text-3xl font-bold tracking-tight">Ustaw nowe hasło</h1>
        <p class="text-muted-foreground mt-2">Wprowadź nowe hasło dla swojego konta</p>
      </div>

      <div class="rounded-lg border bg-card p-8 shadow-sm">
        {
          authError ? (
            <div>
              <div
                class="rounded-lg border border-destructive/50 bg-destructive/10 p-4 text-sm text-destructive mb-6"
                role="alert"
              >
                <div class="flex items-start gap-3">
                  <svg
                    class="size-5 shrink-0 mt-0.5"
                    fill="none"
                    viewBox="0 0 24 24"
                    stroke-width="2"
                    stroke="currentColor"
                    aria-hidden="true"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      d="M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z"
                    />
                  </svg>
                  <p>{authError}</p>
                </div>
              </div>
              <div class="text-center">
                <a
                  href="/password-reset"
                  class="inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:opacity-50 disabled:pointer-events-none ring-offset-background bg-primary text-primary-foreground hover:bg-primary/90 h-10 py-2 px-4"
                >
                  Poproś o nowy link
                </a>
              </div>
            </div>
          ) : (
            <UpdatePasswordForm client:load />
          )
        }
      </div>
    </div>
  </div>
</Layout>
