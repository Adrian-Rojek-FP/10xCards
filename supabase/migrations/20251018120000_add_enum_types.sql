-- migration: add enum types for flashcards system
-- description: creates custom enum types for type-safe operations and better performance
-- tables affected: none (types only, will be used in subsequent migrations)
-- special notes: 
--   - enum types provide better performance than varchar checks
--   - ensures data integrity at the database level
--   - these types will be used by flashcards, learning_state, and review_history tables

-- ============================================================================
-- enum: flashcard_source
-- description: defines the origin of a flashcard (ai-generated or manual)
-- values:
--   - 'ai-full': flashcard generated by AI and accepted without edits
--   - 'ai-edited': flashcard generated by AI but edited by user before acceptance
--   - 'manual': flashcard created manually by user
-- ============================================================================
create type public.flashcard_source as enum ('ai-full', 'ai-edited', 'manual');

comment on type public.flashcard_source is 
  'defines the origin of flashcard: ai-full (unedited AI), ai-edited (modified AI), or manual (user-created)';

-- ============================================================================
-- enum: learning_status
-- description: defines the current learning state of a flashcard in spaced repetition
-- values:
--   - 'new': flashcard never seen before by user
--   - 'learning': flashcard in initial learning phase (short intervals)
--   - 'review': flashcard mastered and in review phase (longer intervals)
--   - 'relearning': flashcard forgotten and being relearned
-- rationale: aligns with SM-2 algorithm phases for optimal spaced repetition
-- ============================================================================
create type public.learning_status as enum ('new', 'learning', 'review', 'relearning');

comment on type public.learning_status is 
  'defines learning phase of flashcard: new, learning, review, or relearning (SM-2 algorithm)';

-- ============================================================================
-- enum: review_rating
-- description: defines user's self-assessment rating during flashcard review
-- values:
--   - 'again': complete failure, card needs to be relearned
--   - 'hard': difficult recall, minimal interval increase
--   - 'good': correct recall, normal interval increase
--   - 'easy': effortless recall, maximum interval increase
-- rationale: standard SM-2 algorithm ratings for calculating next review interval
-- note: stored as integer in review_history (0=again, 1=hard, 2=good, 3=easy)
-- ============================================================================
create type public.review_rating as enum ('again', 'hard', 'good', 'easy');

comment on type public.review_rating is 
  'defines user rating during review: again (0), hard (1), good (2), easy (3) for SM-2 algorithm';

